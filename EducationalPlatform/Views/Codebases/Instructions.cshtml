
@{
    ViewBag.Title = "Codebase Instructions";
}

<!-- Start Banner Area -->
<section class="banner-area relative">
    <div class="container">
        <div class="row d-flex align-items-center justify-content-center">
            <div class="about-content col-lg-12">
                <h1 class="text-white">
                    Instructors' Training
                </h1>
                <p>
                    Understanding how to pick up codebases follows the next Intructional Design.
                </p>
                <div class="link-nav">
                    <span class="box">
                        <a href="@Url.Action("Index", "Codebases")"> Codebases </a>
                        <i class="lnr lnr-arrow-right"></i>
                        <a href="@Url.Action("Instructions", "Codebases")">Instructors' Training</a>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="rocket-img">
        <img src="~/Content/Images/rocket.png" alt="">
    </div>
</section>
<!-- End Banner Area -->
<!-- Start About Area -->
<section id="IA" class="mt-150 mb-150 ">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="section-title text-center">
                    <h3>We were waiting for you...</h3>
                    <br>
                    <p>
                        Hi there! Thank you for your help in building this community! You can contribute by helping people pick up prebuilt codebases.
                        Create a good environment, good strategy and interactive tasks. Take your time, your help is highly valuable!
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End About Area -->
<!-- Start Instructors Agenda Area -->
<section class="mt-100 mb-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <h3 class="mr-15 text-center">Instructors' Agenda </h3>
                <br>
                <div></div>
                <br>
                <ol>
                    <li class="mb-3"> <h5>Firstly, we need to make sure that you understand how to create the tasks. </h5></li>

                    <li class="mb-2">
                        1. This platform uses Google Forms as support for instructors to create the codebase's tasks.
                        We recommend you to use the next Instructional Design in building the teaching/learning model.
                        Then you can add the codebase's details, upload it and embed your Google Form or save it as a link in @Html.ActionLink("Add New Codebase", "New", "Codebases") section.
                    </li>

                    <li class="mb-2">2. This platform recommend to use a roleplay technique for creating the codebase's tasks. You may change it, but we think that is important to simulate a real context as much as possible. </li>

                    <li class="mb-2">
                        3. This system represents a learning platform for picking up codebases. Setting as much support as it can for the users.
                        Going one layer in-depth the platform wants to create a learning environment for the codebases. This will offer support for the codebase, and knowledge needed.
                        And once again going deeper we find the learning model which implies the actual technique for understanding the codebase's features.
                        In this stage the teaching model will include different exercises for gathering codebase information.
                        This 3 layer system: platform, learning environment and model tries to obtain the best experience from different perspectives.
                    </li>

                    <li class="mb-2">4. After a long research we discovered two learning models of understanding a codebase: top-down and bottom-up. </li>

                    <li class="mb-2">
                        5. The steps of the Bottom-up Learning Model <span id="myBtn" class="text-primary">(Find out More)</span> are:
                        <ol class="ml-50">
                            <li> M1. Setup Process </li>
                            <li> M2. User Perpective and Documentation </li>
                            <li> M3. File Organisation </li>
                            <li> M4. Codebase Core</li>
                            <li> M5. Codebase Integration </li>
                            <li> M6. Codebase Design </li>
                        </ol>
                        <!-- Trigger/Open The Modal -->

                    </li>

                    <li class="mb-2">
                        6. The steps of the Top-down Learning Model <span id="myBtn2" class="text-primary">(Find out More)</span> are:
                        <ol class="ml-50">
                            <li> M1. Setup Process </li>
                            <li> M2. User Perpective and Documentation </li>
                            <li> M3. File Organisation </li>
                            <li> M4. Codebase Design </li>
                            <li> M5. Codebase Integration </li>
                            <li> M6. Codebase Core</li>
                        </ol>
                    </li>

                    <li class="mb-2"> 7. The Instructional Design consists of the learning environment and learning model.</li>

                    <li class="mb-2">
                        8. The Steps of the Learning Environment are:
                        <ol class="ml-50">
                            <li> E1. Orientation </li>
                            <li> E2. Prerequisite </li>
                            <li> E3. Project Overview </li>
                            <li> E4. Project Management </li>

                        </ol>
                    </li>

                    <li class="mb-2">
                        9. Learning Environment and Learning Model create a 10 steps Instructional Design: E1-E4 first and continuing with M1-M6.
                        The learing model steps will differ based on the chosen approach.
                    </li>

                    <li class="mb-2">
                        10. We always want the learners to know what is the general purpose and the result(benefits) of each section from the Instructional Design.
                    </li>

                    <li class="mb-2">
                        11. In building the codebase tasks do not forget to have a verification technique for learners responses.
                        From a teaching perpective, the learners should always receive feedback on their work.
                        You can apply the verification step in the Google Forms or upload an Answer Sheet Model in the platform.
                    </li>

                    <li class="mb-2">
                        12. You can use different types of tasks: fill in, matching, multiple choice questions.
                    </li>

                    <li class="mb-2">
                        13. You can use tasks with the purpose of helping learners gathering information or to verify their knowledge.
                    </li>

                    <li class="mb-2">
                        14. A good idea will be to use a Motivation for learners like: resoving trouble reports, adding new features or maintainance.
                        The motivation will align with the learning approach top-down or bottom-up. This is considered another step in the simulation of a real environment.
                    </li>

                    <li class="mb-2">
                        15. An Instructional Design Model for particular codebase can be accessed here:
                        <a class="d-inline" href="https://forms.gle/26reCmUM3Ea5wbyd9">https://forms.gle/26reCmUM3Ea5wbyd9</a>
                    </li>
                </ol>

            </div>
        </div>
    </div>
</section>
<!-- End Instructors Agenda Area -->
<!-- Start Top Down Modal -->
<div id="myModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="text-center">Top-Down Approach</h2>
            <span class="close">&times;</span>

        </div>
        <div class="modal-body">
            <p>The top-down approach consists of getting the overall picture: understanding the architecture, stakeholders, making high-level abstraction, drawing the map of the source code, and then deep dive into related modules. This approach is best suitable in contexts when time is enough for familiarising with all the codebase's features, and implementation is not immediately required. Actions related to project factors such as maintenance, long term development, architecture & design changes, database changes, stakeholders changes, and requirements changes motivate the choice of using the top-down technique.</p>
        </div>
    </div>
</div>
<!-- End Top Down Modal -->
<!-- Bottom Up Modal -->
<div id="myModal2" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="text-center">Bottom-up Approach</h2>
            <span class="close">&times;</span>

        </div>
        <div class="modal-body">
            <p>The bottom-up approach represents the way software engineers segment the codebase, analyse the project structure and start working from an isolated point from where they expand their knowledge and understand the bigger context. This approach is specific to small code implementations like resolving trouble reports and adding isolated new features. Also, learners are not supposed to understand all of the codebase’s features from the start.  This approach is usually associated with short term projects. </p>
        </div>
    </div>
</div>
<!-- End Bottom Up Modal -->
<!-- Start Info Area -->
<section id="E1" class="mt-100 mb-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <div class="section-title text-center">
                    <h3>
                        <i class="fas fa-info-circle mr-10"></i>Bellow you can find the detailed Instructional Design steps for a Bottom-Up approach.
                        It is recomended to read the explanations and understand them in order to align your tasks design with the one proposed.
                        Feel free to change it (cut it or improve it) on how it fits best to your codebase's implementation or to the learners' needs.
                        <br>The first section is an introduction that welcome the learners and set the meaning of the learning techniques used for a proper codebase exploration.
                    </h3>
                    <br>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Info Area -->

<section class="mt-100 mb-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class="text-justify">
                    <h3 class="text-center">E1. Orientation </h3>
                    <br>
                    <h5 class="mb-10">Section Insights:</h5>
                    <p>
                        This section is a welcome paragraph that will explain the process of the codebase exploration and any side notes that will improve the experience. Also, the learning techniques: role play, bottom-up, top-down, and the layers of learning: environment and codebase models are explained here. This is the first contact with the idea of working on the codebase. It is not a contact with the code itself not even with the environment. It is an introduction on how things will go during the tutorial and the desired outcomes/goals. This can improve the learning model by explaining first hand how the information flow will take place.
                        Moreover, any teaching facts that the learner needs to be aware of will be included here. The idea that some of the steps are reusable and will bring benefits on a long run needs to be underlined by instructors.
                    </p>
                    <br />

                    <hr>
                    <h5>Important topics to be considered:</h5>
                    <br />

                    <span class="codebase-topics font-weight-bold">Welcome and Roleplay Presentation</span>
                    <p class="mt-2">- make it interactive, write about the person responsible for the mentoring during the codebase exploration and his support.</p>
                    <br>

                    <span class="codebase-topics font-weight-bold">Learning Methods </span>
                    <p class="mt-2">
                        - explain the learning technique: bottom-up vs top-down, and its insights. Explain how the codebase will be tackled. <br>
                        - explain any Side Notes that you may use for more explanations  or other purpose, and where the learners can find them.
                        Overall, these sidenotes are meant to complete the learning technique.
                        In this paragraph you can mention any information that you will use to help the learners' experience.
                        It is recommended to use these for making the learners aware of the reusable roadmap.
                    </p>
                    <br>

                    <span class="codebase-topics font-weight-bold">Learning Objectives</span>
                    <p class="mt-2">
                        - make learners aware of the more generic reusable model (roadmap) and skills.
                        Overall, the lerners' purpose is to get the necessary experience and skills to faster and better understand new codebases.
                        The learning will happen at different levels: one for this particular codebase and one for any similar project.
                        The students will understand their goals from the start.
                    </p>
                    <br>

                    <span class="codebase-topics font-weight-bold">Learning Structure</span>
                    <p class="mt-2">
                        - clarify the idea of the knolewdge corpus and the structure of it. Embed the tasks into different layers.
                        A recommended explanation will be:
                    </p>
                    <p class="font-italic">
                        The learning model of this codebase is extended to a learning environment. The sections that will build your learning environment are marked with E and the ones that will build your learning model are marked with M.
                        What is the difference?
                        The learning environment set up all the tools and techniques needed in picking up the codebase.
                        The learning model is strictly designed to improve your knowledge over the project behaviour and functionalities.
                    </p>
                    <br>

                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start E2 Info Area -->
<section id="E2" class="mt-100 mb-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <div class="section-title text-center">
                    <h3>
                        <i class="fas fa-info-circle mr-10"></i>The next section is a prerequisite for the codebase, helping learners in gathering the minumum amount of knowledge needed for the codebase exploration.
                        This section can also be used as a learning resource.
                    </h3>
                    <br>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End E2 Info Area -->

<section class="">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> E2. Prerequisite</h3>
                    <br>
                    <h5 class="mb-10">Section Insights:</h5>
                    <p class="mt-2">
                        This section stands as a prerequisite aiming for knowledge leveling and preparing learners for codebase exploration.  It is trying to bring all learners to a minimum level of knowledge that will help the development. It is not an obligatory step but highly recommended to be read because it contains both generic and specific facts related to the codebase. The learning resources are not just prerequisites, they can be used by students at any point of the codebase exploration.
                        The learners are advised to offer links to short tutorials or crash courses.
                    </p>
                    <br>
                    <hr>
                    <br>

                    <h5>Important Topics that you can consider:</h5>
                    <br />

                    <span class="codebase-topics font-weight-bold"> Section General Purpose </span>
                    <p class="mt-2">
                        - explain what is the purpose of this section and why is it important to be read. We always want the learners to know what is the result of each section.
                        Try to convince the learners that even is not part of the codebase it will improve their experience. Talk about the benefits and resources types. A recommended explanation will be:
                    </p>
                    <p class="font-italic">
                        This section will help you level your knowledge and prepare you for the codebase exploration.
                        We want all students to have at least the minimum amount of knowledge to explore the codebase.
                        Do you already know some of the things? That's great! You can skip this step but we highly recommend you to revise them.
                        Do not forget that working on this project already implies having some understanding of different programming areas.
                        You did not see these things before? No problem, you will be guided through each step.
                    </p>
                    <br>


                    <span class="codebase-topics font-weight-bold mb-10">Programming Langauge Conventions</span>
                    <p class="mt-2">
                        - talk about the most used conventions. This it will improve the understanding of code logic.
                    </p>
                    <p class="font-italic">
                    </p>
                    <br>

                    <span class="codebase-topics font-weight-bold">IDE Standards</span>
                    <p class="mt-2">
                        - find/offer short tutorial about the IDE. It will help navigate the project faster and seamless, not getting IDE rationale into the learner’s understanding process.
                    </p>
                    <p class="font-italic">
                    </p>
                    <br>

                    <span class="codebase-topics font-weight-bold">Best Practices and Design Patterns</span>
                    <p class="mt-2">
                        - most of these practices are present in every project. Learners can better make hypotheses by exploring some of these templates.
                    </p>
                    <p class="font-italic">

                    </p>
                    <br>

                    <span class="codebase-topics font-weight-bold">Project Structure: Documentation, .gitingore, licences</span>
                    <p class="mt-2">
                        - think of any generic information that will improve the learners visual understanding when exploring codebase's files. This is part of the conventional aspects and it will help learners recognise the pattern for a generic set of projects.
                    </p>
                    <p class="font-italic">
                        Side Note: For an arbitrary codebase you can build your own prerequisite. Take a look at the programming language, system and project environment, IDE if mentioned, programming style (OOP), best practices and project structure and architecture.
                    </p>
                    <br>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start E3 Info Area -->
<section id="E3" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>The next section will be an introduction to the project, presenting its features and development. Also, the goals of the learners will be underlined here.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End E3 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> E3. Project Overview</h3>
                    <div class="mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>The section's purpose is to create a better picture of the codebase that the learners will be explore. It will help them build a mental model of the application, understanding its most significant features and objectives. Also, the learners will understand the project requirements and therefore, their role and their motivations.</p>
                    </div>
                    <hr>

                    <br>
                    <h5>Important Topics that you can consider:</h5>
                    <br />

                    <span class="codebase-topics font-weight-bold"> Description </span>
                    <p>
                        - describe what the application is about
                    </p>
                    <p class="font-italic">
                        What we are working on? We developed a game for children, a shooter more specific where the whole idea is to destroy the enemy aliens. Unfortunately, some bugs exist. Also, we want to expand the code to improve the users' experience.
                    </p>
                    <br>


                    <span class="codebase-topics font-weight-bold"> Project History </span>
                    <p>
                        - present a short history of the project mentioning the previous stages and the major changes. This will help students integrate into the environment.
                    </p>

                    <br>

                    <span class="codebase-topics font-weight-bold"> Current Stage and Goals </span>
                    <p>
                        - describe the current situation of the project, what are the needs and the problems. This will complete the history lesson given previously.
                    </p>
                    <p class="font-italic">
                        Unfortunately, some bugs exist. Moreover, we want to expand the code to improve the users' experience.
                    </p>
                    <br>

                    <span class="codebase-topics font-weight-bold">Learner's Role and Motivation</span>
                    <p>
                        - present the learners duties and give him the motivation: resolve bugs, add new feature or make code maintainance. A recommended explanation will be:
                    </p>
                    <p class="font-italic">
                        Why are you here? Because you want to contribute to our development and get some experience. What do we want?
                        We want you to understand the current codebase and respond to Trouble Report requirements as well as considering Expanding the Code.
                    </p>
                    <br>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start E4 Info Area -->
<section id="E4" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>The next section comprise the project working principles and culture.
                    It will create the context in which the "team of developers" are working and the desired environment.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End E4 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> E4. Project Management</h3>
                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            This section comprises the project working principles and culture. It will create the context in which the "team of developers" are working and the desired environment. These can offer learners the environmental requirements needed before starting codebase exploration. They can prepare beforehand their machines for supporting the best experience. The setup illustrated is not the only option, but it guarantees the compilation and development of the project.
                            This whole environment contributes to the background knowledge needed for learning the codebase. It represents a bridge to the further explained learning model.
                        </p>
                    </div>
                    <hr>

                    <div class="mt-50">
                        <h5>Important Topics that you can consider:</h5>
                        <br />

                        <span class="codebase-topics font-weight-bold"> General Purpose </span>
                        <p>
                            - describe what is the purpose of this section
                        </p>
                        <p class="font-italic">
                            First things first, I want to introduce you to our developing environment, our setup and what is recommended for you to use. Then I'll show you some project details and restrictions that will make you aware of the project architecture and team goals. This section will set up the context in which the project will grow.
                        </p>
                        <br>


                        <span class="codebase-topics font-weight-bold"> Explanations </span>
                        <p>
                            - describe any terminology and their importance
                        </p>
                        <p class="font-italic">
                            System-level and Project-level environments are very important when projects are developed in a team. These represent the digital world in which our application will grow. Usually, the project needs to use similar environments for not expecting any compatibility errors. Of course, this is not strictly but it is a highly desirable feature. Our team created and maintain the project by using the following structure:
                        </p>
                        <br>

                        <span class="codebase-topics font-weight-bold"> System and Project Environments </span>
                        <p>
                            - present the details for each
                        </p>
                        <p class="font-italic">
                            System Environment: Windows, Codebase Environment: Visual Studio, Version Control: Github, Time Limit: 2 hours, Sprints: 1
                        </p>
                        <br>

                        <span class="codebase-topics font-weight-bold">Codebase Implementation Details</span>
                        <p>
                            - present the details
                        </p>
                        <p class="font-italic">
                            Why are you here? Because you want to contribute to our development and get some experience. What do we want?
                            We want you to understand the current codebase and respond to Trouble Report requirements as well as considering Expanding the Code.
                        </p>
                        <br>

                        <span class="codebase-topics font-weight-bold">Codebase Development Constraints</span>
                        <p>
                            - mention the time limit and any other constraints
                        </p>
                        <p class="font-italic">
                            Why are you here? Because you want to contribute to our development and get some experience. What do we want?
                            We want you to understand the current codebase and respond to Trouble Report requirements as well as considering Expanding the Code.
                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start M1 Info Area -->
<section id="M1" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>In the next section the learning model starts with the codebase interaction.
                    The purpose is to make the project setup by skimming the documentation and codebase's structure.
                    This section will link the documentation with the project structure.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End M1 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> M.1 Setup Process</h3>

                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            This section represents the first step from the learning model, and here the learners take the first contact with the codebase. So far, the learners had to be prepared by the instructor and create a supportive environment. Now, the learners need to see what is the highest outcome they can get with the least effort. Observing the application running is a massive impact over the learner's mental comfort. Also, from the project perspective, the setup breaks the barrier, transposing the learner from an observer to a developer (player). The student can be considered after this stage, part of the project team. Consequently, now the learners will have an entry path to the codebase examination, and more important, testing. This strategy brings benefits to the learners, such as taking action on source files and testing the interface.
                            Reading documentation and checking code structure is the basis for correctly completing the project setup. Because the underlying idea is not going too deep into either documentation or code files, for now, learners are advised to make hypotheses.
                        </p>
                    </div>
                    <hr>

                    <div class="mt-50">
                        <h5>Important Steps that you can consider for creating the tasks: </h5> <br>
                        <span class="codebase-topics font-weight-bold"> 1. Skim the documentation  </span>
                        <p>
                            - describe what is the purpose of this section
                        </p>
                        <p class="font-italic">
                            First things first, I want to introduce you to our developing environment, our setup and what is recommended for you to use. Then I'll show you some project details and restrictions that will make you aware of the project architecture and team goals. This section will set up the context in which the project will grow.
                        </p>
                        <br>


                        <span class="codebase-topics font-weight-bold"> 2. Skim through the files and map their structure with the documentation (figure out how to setup & run it) </span>
                        <p>
                            - describe any terminology and their importance
                        </p>
                        <p class="font-italic">
                            System-level and Project-level environments are very important when projects are developed in a team. These represent the digital world in which our application will grow. Usually, the project needs to use similar environments for not expecting any compatibility errors. Of course, this is not strictly but it is a highly desirable feature. Our team created and maintain the project by using the following structure:
                        </p>
                        <br>

                        <span class="codebase-topics font-weight-bold"> 3. Make the project setup (install dependencies/requirements) and run it without errors  </span>
                        <p>
                            - present the details for each
                        </p>
                        <p class="font-italic">
                            System Environment: Windows, Codebase Environment: Visual Studio, Version Control: Github, Time Limit: 2 hours, Sprints: 1
                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start M2 Info Area -->
<section id="M2" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>
                    In the next section, the goal is to become an expert user of the system and thoroughly analyse the documentation.
                    This strategy will help learners gaining more insights before reading the code, especially on app behaviour.
                    This section will link Interface with Documentation.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End M2 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> M2. User Perspective and Documentation</h3>

                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            Here the learners will explore the interface trying to observe all the functionalities. Using the app behaviour in understanding code is one of the easiest ways of tackling the computational models because learners will understand the flow of data and functionalities of each object, building a mental model of the app functionalities.
                            Such that, an improvement in understanding the backend will be if learners will explore the frontend first. This strategy is the reversed thinking of the way the application was built. Also, it means that learners need to become expert users of the system to become aware of the application requirements. This section will contribute to the entry path of understanding the codebase, helping to gather enough knowledge before actually reading the code.
                            Learners can use the documentation for further understanding of the behaviour of each file. A thorough reading will map each of the interface functionalities with the descriptions from the documentation.
                        </p>
                    </div>
                    <hr>

                    <div>
                        <br />
                        <h5>Important Steps that you can consider for creating the tasks:</h5> <br>

                        <span class="codebase-topics font-weight-bold"> 1. Explore the interface  </span>
                        <p>
                            - the learners should try to find all possible states of the interface. Testing it and asking themselves what is happening and why is it happening will help learners understand how those objects have been implemented.
                        </p>
                        <p class="font-italic">
                            What is happening when you press the button? Why should there be that button there? <br>
                            Choose each state that this app goes into: welcome, pause, exit, game running, lost game, new game <br>
                            What represents each number? What are the objects? How many lives do you have? Do there exist any levels for this game?
                            What are the functionalities? Can you move the spaceship in all directions? What are the keys for that?
                            Do you have unlimited bullets? What is the goal of the user playing?
                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start M3 Info Area -->
<section id="M3" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>
                    In the next section the learners will explore the structure of the project and understand the main objectives and duties of each file.
                    This section will link the interface behaviour to the project structure.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End M3 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> M3. File Organisation</h3>

                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            Inside this section, learners start reading code and try to build a filter for better structuring the information.
                            This virtual filter improves the knowledge of the project structure collected during the setup and creates new information on top of it.
                            It means that all data is devised and labelled by students based on the project structure.
                            Learners will be able to see the purpose of each file and their functionalities, as well as prioritise the most important ones.
                            Also, this section represents a link between the user functionalities and the code implementation.
                            Now, learners try to map their observations to the code, creating a bridge between the interface, documentation and raw code.
                        </p>
                    </div>
                    <hr>

                    <div class="mt-50">

                        <h5>Important Steps that you can consider for creating the tasks:</h5> <br>
                        <span class="codebase-topics font-weight-bold"> 1. Take a look at the configuration of the files and match each with what you saw in the interface </span>
                        <p>
                            - comprise the importance of understanding the app more than a simple gathering of files, and gives each a meaning, an action and a place in the app features.
                        </p>
                        <p class="font-italic">
                            Skim the files again and Match each with the interface object: <br>
                            ship.py - the object that helps you distroy the aliens, this is draw like a small rectangle, <br>
                            alien.py - the object that you control from the keyboard <br>
                            bullet.py -  the object that attacks you by moving left-right and towards you, <br>
                            button.py - the object that let you start the game, draw like a big rectangular <br>
                            utils.py - the area that keeps the numbers for ship lives, levels, points <br>
                        </p>
                        <br>


                        <span class="codebase-topics font-weight-bold"> 2. Try to figure out an one line description for each file </span>
                        <p>
                            - On the second step the learners should create a short description of each file for appropriation of what object it represents or what functionality it has.
                        </p>
                        <p class="font-italic">
                        </p>
                        <br>
                        <span class="codebase-topics font-weight-bold"> 3. Find the files that handles game behaviour  </span>
                        <p>
                            - It is important to find the file that contains most of the game behaviour because this will control all the application features by making most of the application logic.
                            It will give different priorities to each file.
                        </p>
                        <p class="font-italic">
                            Side Note: Here the general aspect that we are aiming for is to find the file with the most influence over the others. Consequently, this file will be the core of the project and will map each of the other files inside it. You need to know where the biggest mountain is, right? Is important to know where to go in case further along you want to change the app functionality. This also will help in building the mental model of files connections.
                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start M4 Info Area -->
<section id="M4" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>
                    From here, the learning model will depend on the chosen approach: Bottom-up or Top-Down.
                    Because this is an example of a Bottom-up approach, the next section will continue with the analyse of the low-level code logic.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End M4 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> M4. Codebase Core</h3>

                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            Inside this section, learners start reading code and try to build a filter for better structuring the information.
                            This virtual filter improves the knowledge of the project structure collected during the setup and creates new information on top of it.
                            It means that all data is devised and labelled by students based on the project structure.
                            Learners will be able to see the purpose of each file and their functionalities, as well as prioritise the most important ones.
                            Also, this section represents a link between the user functionalities and the code implementation.
                            Now, learners try to map their observations to the code, creating a bridge between the interface, documentation and raw code.
                        </p>
                    </div>
                    <hr>

                    <div class="mt-50">

                        <h5>Important Steps that you can consider for creating the tasks:</h5> <br>

                        <h6 class="mb-10"> Iterative steps: </h6>
                        <div class="ml-50 mr-50">
                            <span class="codebase-topics font-weight-bold d-block"> 1. Choose a file</span>
                            <span class="codebase-topics font-weight-bold d-block">  2. Read the imports </span>
                            <span class="codebase-topics font-weight-bold d-block">   3. Read variables </span>
                            <span class="codebase-topics font-weight-bold d-block">    4. Read comments </span>
                            <span class="codebase-topics font-weight-bold d-block">    5. Skim functions and search links between them </span>
                        </div>
                        <p class="mt-10">
                            This stage covers different alternatives to be considered by the learners when choosing the file. The best approach will be to let the learner decide the path, choosing between starting with the runnable/main file, most evident file giving the interface or first in the order of the files. Such that learners will repeat the choosing technique for all the others. Reading the files sequential, one by one, but this style will let you make fewer connections. You can read the files related to the interface objects and choose the most evident first. In this way, you can better observe the app behaviour. Also, another method is to start from the main file and search for the functions that are called. This strategy will help learners because the main function will call anything relevant, and those will expand furthermore. Remember: always is good to make connections between files. The idea is not to understand each of the file's purposes separately!
                            During these steps, learners will check code rationale based on the knowledge previously gathered from project structure, interface functionalities and application behaviour. From the survey taken, there can be considered two approaches in analysing the code: one is a brief understanding of each file and making connections only inside each file after all are analysed the process is retaken with a more focus on connections between files. The second approach referees to understanding during the code exploration of the linkages between specific variables and functions, going back and forth between the files. During the stage of understanding the links between the files, learners are advised to look after the most evident variables or functions because these will be the easiest to understand. Also, learners can benefit from the “search” function built in the IDE to search for keywords and improve the process. Moreover, learners should always check code questions with interface functionalities and application behaviour.
                        </p>
                        <p class="font-italic">
                            What are the imports? How many classes are imported in alien-invasion? How many are imports from outside libraries?
                        </p>
                        <br>

                        <h6 class="mb-10"> Optional procedures: </h6>
                        <div class="ml-50 mr-50">
                            <span class="codebase-topics font-weight-bold d-block"> 1. Make code review considering DRY principle, magic numbers, indentation, deep nesting, line length limit, code simplicity, files and folder structure</span>
                            <span class="codebase-topics font-weight-bold  d-block"> 2. Fix code that is written truly inconsistently without following any formatting standards </span>
                            <span class="codebase-topics font-weight-bold  d-block">  3. Check the log and common edited files  </span>
                            <span class="codebase-topics font-weight-bold  d-block">   4. Write a glossary for variables and functions </span>
                            <span class="codebase-topics font-weight-bold  d-block">    5. Add error and warning messages </span>
                            <span class="codebase-topics font-weight-bold  d-block">    6. Run the existent tests and build new ones </span>
                            <span class="codebase-topics font-weight-bold  d-block">    7. Use debugger and track the most important variables </span>
                            <span class="codebase-topics font-weight-bold  d-block">    8. Explain both analytically and intuitively what the code does to somebody else </span>
                        </div>
                        <p>
                            These are separate tasks aiming to manipulate code. All are designed to better understand code format and code management at a low level.
                            These tasks cover learners knoowledge with another layer of understanding.
                        </p>
                        <p class="font-italic">
                            Select the bullet_speed variable and use the IDE Debugger. In how many files it is used?
                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start M5 Info Area -->
<section id="M5" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>
                    The next section will tackle codebase's communication paths, interaction with the environment and internal information flow.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- End M5 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> M5. Codebase Integration</h3>

                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            This section is a different approach of understanding the codebase, dedicated to learning the connection between application features as well as exploring the framing of the environmental factors.
                            Learners can discover the codebase information transfer with the user, other programmes or databases.  Also, learners will get a better understanding of how compatibility is sustained between the project and the external layers.  The learners will explore the connections between the information flow and codebase's components, as well as understanding how the computational model is spread out. This section will be helpful when deciding to change the database behaviour, deleting or adding new libraries, or new features.
                        </p>
                    </div>

                    <hr>

                    <div class="mt-50">
                        <h5>Important Steps that you can consider for creating the tasks:</h5> <br>
                        <div class="ml-50 mr-50">
                            <span class="codebase-topics font-weight-bold d-block"> 1. Search for libraries and paths, APIs, external services,  third parties and read their documentation, </span>
                            <span class="codebase-topics font-weight-bold d-block">  2. Categorise file extensions</span>
                            <span class="codebase-topics font-weight-bold d-block"> 3. Understand the compatibility between the components </span>
                            <span class="codebase-topics font-weight-bold d-block"> 4. Track how programming languages exchange information </span>
                            <span class="codebase-topics font-weight-bold d-block"> 5. Analyse Data flow </span>
                            <span class="codebase-topics font-weight-bold d-block"> 6. Analyse database information </span>
                        </div>
                        <p class="mt-10">
                            Searching for external communications channels like libraries, API’s, third parties, will help learners better understand the purpose of the app. Also, the implementation of the support features that these procedures bring will improve the learners’ knowledge in a wider context. Analysing the extensions of the files, learners will classify and weight the technologies used. It will offer them insights into project structure and effort allocation.
                            Considering the internal communication channels, learners are advised to understand the compatibility between the components and information exchange. This approach will ease the debugging process and also will improve the learners’ knowledge in a wider context.
                            The last steps include the data flow analyse, data storing and processing, and bring the benefits of better understanding the application information manipulation.

                        </p>
                        <p class="font-italic">
                            How is the interaction with the database being done? Try to find how the data is saved in the database.
                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start M6 Info Area -->
<section id="M6" class="feature-area">
    <div class="container">
        <div class="row justify-content-center">
            <div class=" col-lg-8 col-md-8 justify-content-center">
                <h3 class="text-center">
                    <i class="fas fa-info-circle mr-10"></i>
                    The next section is an abstractisation of the codebase implementation.
                    High-level understanding follows the analysis of the codebase requirements and structural design.
                </h3>
                <br>
            </div>
        </div>
    </div>
</section>
<!-- Start M6 Info Area -->

<section class="mt-100">
    <div class="container">
        <div class="row justify-content-center">
            <div class="codebase-step col-lg-8 col-md-8 justify-content-center">
                <div class=" text-justify">
                    <h3 class="text-center"> M6. Codebase Design</h3>

                    <div class="mt-20 mb-50">
                        <h5 class="mb-10">Section Insights:</h5>
                        <p>
                            This section is a high-level stage of codebase understanding, comprising model's control and composition. In this section, learners will get the principles of codebase design and architecture. Learners will find tasks related to class diagrams, users types, data process, personas and requirements. This section tackles the project's purpose, specifications and development process, following data manipulation and operations.
                            The idea is to understand the codebase as a product, its requirements and abilities. This technique will help learners when significant changes need to take place like changing to a different programming language, adding more users or adding more modules.
                        </p>
                    </div>
                    <hr>

                    <div class="mt-50">
                        <h5>Important Steps that you can consider for creating the tasks:</h5> <br>
                        <div class="ml-50 mr-50">
                            <span class="codebase-topics font-weight-bold d-block"> 1.  Find the stakeholders </span>
                            <span class="codebase-topics font-weight-bold d-block">  2. Find the requirements of the project and prioritise them</span>
                            <span class="codebase-topics font-weight-bold d-block">  3. Find data needed for the application </span>
                            <span class="codebase-topics font-weight-bold d-block">  4. Read design and functional specifications </span>
                            <span class="codebase-topics font-weight-bold d-block">  5. Draw the ERD diagram, system architecture diagram, site/mind map, flow chart</span>
                            <span class="codebase-topics font-weight-bold d-block">   6. Enumerate the application modules </span>
                            <span class="codebase-topics font-weight-bold d-block">    7. Create personas </span>
                            <span class="codebase-topics font-weight-bold d-block">    8. Find application purpose and benefits </span>
                            <span class="codebase-topics font-weight-bold d-block">   9. Explore the framework </span>
                        </div>
                        <p class="mt-20">
                            This section considers separation and classification of the codebase architecture, users, and objectives. This strategy is simulating the same procedures as the ones followed by the developers when the codebase was created. It will help learners understand the application from the perspective of an active developer rather than a person who tries to understand others’ work.

                            The steps comprise a higher understanding of the computational model, resulting in tasks that consider major changes or overall conceptions. Such that, for improving the learning model for novice programmers the tasks will consider more app behaviour and research related questions than modifications.
                        </p>
                        <p class="font-italic">

                        </p>
                        <br>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div style="position: fixed; bottom: 20px; right: 20px; border: 2px solid #38a4ff; padding:5px;  border-radius: 20px;" class="text-justify">
    <a href="#IA" class="d-block">Instructors' Agenda </a>
    <a href="#E1" class="d-block"> E1. Orientation </a>
    <a href="#E2" class="d-block"> E2. Prerequisite </a>
    <a href="#E3" class="d-block"> E3. Project Overview </a>
    <a href="#E4" class="d-block"> E4. Project Management </a>
    <a href="#M1" class="d-block"> M1. Setup Process </a>
    <a href="#M2" class="d-block"> M2. User Perspective & <br> Documentation </a>
    <a href="#M3" class="d-block"> M3. File Organisation </a>
    <a href="#M4" class="d-block"> M4. Codebase Core </a>
    <a href="#M5" class="d-block"> M5. Codebase Integration </a>
    <a href="#M6" class="d-block"> M6. Codebase Design </a>
</div>

